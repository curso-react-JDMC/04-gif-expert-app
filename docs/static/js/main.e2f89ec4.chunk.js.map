{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","defaultProps","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGMA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,cAAkB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAcvC,OACE,mCACE,uBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAC,OAAMP,GAAN,mBAAoBO,OACpCN,EAAc,MAMd,UACE,6BAAMD,IACN,uBACEQ,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,gBAyB3BZ,EAAYe,aAAe,GAQZf,Q,+BCxCDgB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARlB,kBAWbM,GAXa,4CAAH,sDCUNO,EAVK,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAE9B,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEnB,sBAAKgB,UAAU,yCAAf,UACG,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACxB,4BAAKA,QC0BIS,EA3BC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAa,IAAD,EACdf,mBAAS,CACjCsB,KAAK,GACLe,SAAQ,IAH8B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAW,WACT1B,EAASC,GAAW0B,MAAM,SAAAC,GACxBH,EAAS,CACPjB,KAAMoB,EACNL,SAAQ,SAGZ,CAACtB,IAEIuB,EDXyBK,CAAc5B,GAAjCa,EAHmB,EAGxBN,KAAYe,EAHY,EAGZA,QAMpB,OALAN,QAAQC,IAAIK,GAMV,qCACE,6BAAMtB,IACJsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SACE,6BAEIL,EAAOJ,KAAK,SAACC,GAAD,OAER,aADF,CACG,EAAD,eAAkCA,GAAdA,EAAIC,eEflCkB,EAAe,WAAK,MAEW5C,mBAAS,CAAC,cAFrB,mBAEjB6C,EAFiB,KAEN9C,EAFM,KAMxB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEI8C,EAAWrB,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAECA,SAAaA,GADPA,YAWlB6B,EAAa/B,aAAe,GAKb+B,QChCfE,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e2f89ec4.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories })=>{\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e)=>{\n    setInputValue(e.target.value);\n  }\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n    if(inputValue.trim().length > 2){\n      setCategories( c => [ inputValue,...c] );\n      setInputValue('');\n    }\n\n }\n  return (\n    <>\n      <form onSubmit = { handleSubmit }>\n        <h1>{ inputValue }</h1>\n        <input\n          type=\"text\"\n          value={ inputValue }\n          onChange={ handleInputChange }\n        />\n      </form>\n\n    </>\n  );\n}\n\nAddCategory.defaultProps = {\n};\n\nAddCategory.propTypes = {\n\n  setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;\n"," export const getGifs = async( category )=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category ) }&limit=10&api_key=zqjFEgcSPRk0RVl37j6snr3SlvndtZ0S`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map( img => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n      }\n    } )\n    return gifs;\n  }\n","const GifGridItem = ({ id,title,url }) => {\n  console.log(id,title,url);\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n       <img src={ url } alt={ title }/>\n      <p>{ title }</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","import React, {useState,useEffect} from 'react'\nimport {useFetchGifs} from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n  \n  const { data:images,loading } = useFetchGifs( category );\n  console.log(loading);\n  \n\n\n  // getGifs();\n  return (\n    <>\n      <h3>{ category }</h3>\n      { loading && <p>Loading</p> }\n      <div className=\"card-grid\">\n        <ol>\n          {\n            images.map( (img) =>(\n              // <li key={ id }>{ title }</li>\n                <GifGridItem  key={ img.id } { ...img }/>\n            ) )\n          }\n        </ol>\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid;\n","import {useState,useEffect} from \"react\"\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category )=>{\n  const [state, setState] = useState({\n    data:[],\n    loading:true\n  });\n\n  useEffect( ()=>{\n    getGifs( category ).then( imgs => {\n      setState({\n        data: imgs,\n        loading:false\n      })\n    } )\n  },[category] )\n\n  return state; //{ data:[],loading:true };\n} \n","\nimport React, {useState} from 'react';\n// import PropTypes from 'prop-types';\n// import styles from './GifExpertApp.css';\nimport  AddCategory  from './components/AddCategory';\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = ()=> {\n  // const categories = ['One Punch','Samurai X','Dragon Ball'];\n  const [categories,setCategories] = useState(['One Punch']);\n  /*   const handleAdd = ()=>{ */\n  /* setCategories([...categories,'prueba']); */\n  /* } */\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr/>\n      <ol>\n        {\n          categories.map( category=>(\n           <GifGrid \n            key={ category }\n            category = { category } /> \n          ))\n        }\n      </ol>\n\n    </>\n  );\n}\n\n// <button onClick={ handleAdd }>Agregar</button>\nGifExpertApp.defaultProps = {};\n\nGifExpertApp.propTypes = {\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n// import AddCategory from './components/AddCategory';\n\nReactDOM.render(\n  // <AddCategory />,\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}